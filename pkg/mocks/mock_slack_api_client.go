// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/acyl/lib (interfaces: SlackAPIClient)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	slack "github.com/nlopes/slack"
)

// Mock of SlackAPIClient interface
type MockSlackAPIClient struct {
	ctrl     *gomock.Controller
	recorder *_MockSlackAPIClientRecorder
}

// Recorder for MockSlackAPIClient (not exported)
type _MockSlackAPIClientRecorder struct {
	mock *MockSlackAPIClient
}

func NewMockSlackAPIClient(ctrl *gomock.Controller) *MockSlackAPIClient {
	mock := &MockSlackAPIClient{ctrl: ctrl}
	mock.recorder = &_MockSlackAPIClientRecorder{mock}
	return mock
}

func (_m *MockSlackAPIClient) EXPECT() *_MockSlackAPIClientRecorder {
	return _m.recorder
}

func (_m *MockSlackAPIClient) PostMessage(_param0 string, _param1 string, _param2 slack.PostMessageParameters) (string, string, error) {
	ret := _m.ctrl.Call(_m, "PostMessage", _param0, _param1, _param2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockSlackAPIClientRecorder) PostMessage(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PostMessage", arg0, arg1, arg2)
}
