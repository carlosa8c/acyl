// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: api.proto

package furanrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuildState int32

const (
	BuildState_UNKNOWN          BuildState = 0
	BuildState_NOTSTARTED       BuildState = 1
	BuildState_SKIPPED          BuildState = 2
	BuildState_RUNNING          BuildState = 3
	BuildState_FAILURE          BuildState = 4
	BuildState_SUCCESS          BuildState = 5
	BuildState_CANCEL_REQUESTED BuildState = 6
	BuildState_CANCELLED        BuildState = 7
)

// Enum value maps for BuildState.
var (
	BuildState_name = map[int32]string{
		0: "UNKNOWN",
		1: "NOTSTARTED",
		2: "SKIPPED",
		3: "RUNNING",
		4: "FAILURE",
		5: "SUCCESS",
		6: "CANCEL_REQUESTED",
		7: "CANCELLED",
	}
	BuildState_value = map[string]int32{
		"UNKNOWN":          0,
		"NOTSTARTED":       1,
		"SKIPPED":          2,
		"RUNNING":          3,
		"FAILURE":          4,
		"SUCCESS":          5,
		"CANCEL_REQUESTED": 6,
		"CANCELLED":        7,
	}
)

func (x BuildState) Enum() *BuildState {
	p := new(BuildState)
	*p = x
	return p
}

func (x BuildState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (BuildState) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x BuildState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildState.Descriptor instead.
func (BuildState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type BuildCacheOpts_CacheType int32

const (
	BuildCacheOpts_UNKNOWN  BuildCacheOpts_CacheType = 0
	BuildCacheOpts_DISABLED BuildCacheOpts_CacheType = 1
	BuildCacheOpts_S3       BuildCacheOpts_CacheType = 2 // manually cache to/from the S3 bucket configured server-side
	BuildCacheOpts_INLINE   BuildCacheOpts_CacheType = 3 // BuildKit OCI inline cache
)

// Enum value maps for BuildCacheOpts_CacheType.
var (
	BuildCacheOpts_CacheType_name = map[int32]string{
		0: "UNKNOWN",
		1: "DISABLED",
		2: "S3",
		3: "INLINE",
	}
	BuildCacheOpts_CacheType_value = map[string]int32{
		"UNKNOWN":  0,
		"DISABLED": 1,
		"S3":       2,
		"INLINE":   3,
	}
)

func (x BuildCacheOpts_CacheType) Enum() *BuildCacheOpts_CacheType {
	p := new(BuildCacheOpts_CacheType)
	*p = x
	return p
}

func (x BuildCacheOpts_CacheType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildCacheOpts_CacheType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (BuildCacheOpts_CacheType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x BuildCacheOpts_CacheType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildCacheOpts_CacheType.Descriptor instead.
func (BuildCacheOpts_CacheType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

// From https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto
type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos   int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type BuildCacheOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    BuildCacheOpts_CacheType `protobuf:"varint,1,opt,name=type,proto3,enum=furanrpc.BuildCacheOpts_CacheType" json:"type,omitempty"`
	MaxMode bool                     `protobuf:"varint,2,opt,name=max_mode,json=maxMode,proto3" json:"max_mode,omitempty"` // BuildKit cache "max mode" (default: false)
}

func (x *BuildCacheOpts) Reset() {
	*x = BuildCacheOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCacheOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCacheOpts) ProtoMessage() {}

func (x *BuildCacheOpts) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCacheOpts.ProtoReflect.Descriptor instead.
func (*BuildCacheOpts) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *BuildCacheOpts) GetType() BuildCacheOpts_CacheType {
	if x != nil {
		return x.Type
	}
	return BuildCacheOpts_UNKNOWN
}

func (x *BuildCacheOpts) GetMaxMode() bool {
	if x != nil {
		return x.MaxMode
	}
	return false
}

// BuildResources specifies optional requests and limits for the BuildKit container.
// This uses the same syntax as k8s objects (ex: "2G", "100m").
// If empty, reasonable defaults will be used.
// Use this only if a particular build needs significantly more resources and is failing due to OOM or CPU starvation.
// The server may reject excessively large values.
// Kubernetes may have difficulty scheduling build jobs with high resource requests, leading to build timeouts.
type BuildResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuRequest    string `protobuf:"bytes,1,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	CpuLimit      string `protobuf:"bytes,2,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	MemoryRequest string `protobuf:"bytes,3,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"`
	MemoryLimit   string `protobuf:"bytes,4,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
}

func (x *BuildResources) Reset() {
	*x = BuildResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResources) ProtoMessage() {}

func (x *BuildResources) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResources.ProtoReflect.Descriptor instead.
func (*BuildResources) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *BuildResources) GetCpuRequest() string {
	if x != nil {
		return x.CpuRequest
	}
	return ""
}

func (x *BuildResources) GetCpuLimit() string {
	if x != nil {
		return x.CpuLimit
	}
	return ""
}

func (x *BuildResources) GetMemoryRequest() string {
	if x != nil {
		return x.MemoryRequest
	}
	return ""
}

func (x *BuildResources) GetMemoryLimit() string {
	if x != nil {
		return x.MemoryLimit
	}
	return ""
}

type BuildDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GithubRepo       string            `protobuf:"bytes,1,opt,name=github_repo,json=githubRepo,proto3" json:"github_repo,omitempty"`
	GithubCredential string            `protobuf:"bytes,2,opt,name=github_credential,json=githubCredential,proto3" json:"github_credential,omitempty"`
	DockerfilePath   string            `protobuf:"bytes,3,opt,name=dockerfile_path,json=dockerfilePath,proto3" json:"dockerfile_path,omitempty"` // must be a directory containing a file named "dockerfile" or "Dockerfile"
	Ref              string            `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`                                             // GitHub ref (sha/branch/tag)
	Tags             []string          `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	TagWithCommitSha bool              `protobuf:"varint,6,opt,name=tag_with_commit_sha,json=tagWithCommitSha,proto3" json:"tag_with_commit_sha,omitempty"`
	Args             map[string]string `protobuf:"bytes,7,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CacheOptions     *BuildCacheOpts   `protobuf:"bytes,8,opt,name=cache_options,json=cacheOptions,proto3" json:"cache_options,omitempty"`
	Resources        *BuildResources   `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`                                  // Optional build resources for BuildKit
	DockerfileName   string            `protobuf:"bytes,10,opt,name=dockerfile_name,json=dockerfileName,proto3" json:"dockerfile_name,omitempty"` // Optional rename of dockerfile
}

func (x *BuildDefinition) Reset() {
	*x = BuildDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDefinition) ProtoMessage() {}

func (x *BuildDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDefinition.ProtoReflect.Descriptor instead.
func (*BuildDefinition) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *BuildDefinition) GetGithubRepo() string {
	if x != nil {
		return x.GithubRepo
	}
	return ""
}

func (x *BuildDefinition) GetGithubCredential() string {
	if x != nil {
		return x.GithubCredential
	}
	return ""
}

func (x *BuildDefinition) GetDockerfilePath() string {
	if x != nil {
		return x.DockerfilePath
	}
	return ""
}

func (x *BuildDefinition) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *BuildDefinition) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BuildDefinition) GetTagWithCommitSha() bool {
	if x != nil {
		return x.TagWithCommitSha
	}
	return false
}

func (x *BuildDefinition) GetArgs() map[string]string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *BuildDefinition) GetCacheOptions() *BuildCacheOpts {
	if x != nil {
		return x.CacheOptions
	}
	return nil
}

func (x *BuildDefinition) GetResources() *BuildResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *BuildDefinition) GetDockerfileName() string {
	if x != nil {
		return x.DockerfileName
	}
	return ""
}

type PushRegistryDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *PushRegistryDefinition) Reset() {
	*x = PushRegistryDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRegistryDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRegistryDefinition) ProtoMessage() {}

func (x *PushRegistryDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRegistryDefinition.ProtoReflect.Descriptor instead.
func (*PushRegistryDefinition) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *PushRegistryDefinition) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type PushDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registries []*PushRegistryDefinition `protobuf:"bytes,1,rep,name=registries,proto3" json:"registries,omitempty"`
}

func (x *PushDefinition) Reset() {
	*x = PushDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDefinition) ProtoMessage() {}

func (x *PushDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDefinition.ProtoReflect.Descriptor instead.
func (*PushDefinition) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *PushDefinition) GetRegistries() []*PushRegistryDefinition {
	if x != nil {
		return x.Registries
	}
	return nil
}

type BuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build        *BuildDefinition `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	Push         *PushDefinition  `protobuf:"bytes,2,opt,name=push,proto3" json:"push,omitempty"`
	SkipIfExists bool             `protobuf:"varint,3,opt,name=skip_if_exists,json=skipIfExists,proto3" json:"skip_if_exists,omitempty"` // all tags exist in all image repos
}

func (x *BuildRequest) Reset() {
	*x = BuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRequest) ProtoMessage() {}

func (x *BuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRequest.ProtoReflect.Descriptor instead.
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *BuildRequest) GetBuild() *BuildDefinition {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *BuildRequest) GetPush() *PushDefinition {
	if x != nil {
		return x.Push
	}
	return nil
}

func (x *BuildRequest) GetSkipIfExists() bool {
	if x != nil {
		return x.SkipIfExists
	}
	return false
}

type BuildStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
}

func (x *BuildStatusRequest) Reset() {
	*x = BuildStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStatusRequest) ProtoMessage() {}

func (x *BuildStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStatusRequest.ProtoReflect.Descriptor instead.
func (*BuildStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *BuildStatusRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type BuildCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
}

func (x *BuildCancelRequest) Reset() {
	*x = BuildCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCancelRequest) ProtoMessage() {}

func (x *BuildCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCancelRequest.ProtoReflect.Descriptor instead.
func (*BuildCancelRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *BuildCancelRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type BuildRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
}

func (x *BuildRequestResponse) Reset() {
	*x = BuildRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRequestResponse) ProtoMessage() {}

func (x *BuildRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRequestResponse.ProtoReflect.Descriptor instead.
func (*BuildRequestResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *BuildRequestResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type BuildCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
}

func (x *BuildCancelResponse) Reset() {
	*x = BuildCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCancelResponse) ProtoMessage() {}

func (x *BuildCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCancelResponse.ProtoReflect.Descriptor instead.
func (*BuildCancelResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *BuildCancelResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type BuildStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId      string        `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	BuildRequest *BuildRequest `protobuf:"bytes,2,opt,name=build_request,json=buildRequest,proto3" json:"build_request,omitempty"`
	State        BuildState    `protobuf:"varint,3,opt,name=state,proto3,enum=furanrpc.BuildState" json:"state,omitempty"`
	Started      *Timestamp    `protobuf:"bytes,4,opt,name=started,proto3" json:"started,omitempty"`
	Completed    *Timestamp    `protobuf:"bytes,5,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *BuildStatusResponse) Reset() {
	*x = BuildStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStatusResponse) ProtoMessage() {}

func (x *BuildStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStatusResponse.ProtoReflect.Descriptor instead.
func (*BuildStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *BuildStatusResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildStatusResponse) GetBuildRequest() *BuildRequest {
	if x != nil {
		return x.BuildRequest
	}
	return nil
}

func (x *BuildStatusResponse) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_UNKNOWN
}

func (x *BuildStatusResponse) GetStarted() *Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *BuildStatusResponse) GetCompleted() *Timestamp {
	if x != nil {
		return x.Completed
	}
	return nil
}

type BuildEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId      string     `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	Message      string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CurrentState BuildState `protobuf:"varint,3,opt,name=current_state,json=currentState,proto3,enum=furanrpc.BuildState" json:"current_state,omitempty"`
}

func (x *BuildEvent) Reset() {
	*x = BuildEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildEvent) ProtoMessage() {}

func (x *BuildEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildEvent.ProtoReflect.Descriptor instead.
func (*BuildEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *BuildEvent) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BuildEvent) GetCurrentState() BuildState {
	if x != nil {
		return x.CurrentState
	}
	return BuildState_UNKNOWN
}

type BuildEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId      string     `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	CurrentState BuildState `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=furanrpc.BuildState" json:"current_state,omitempty"`
	Messages     []string   `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *BuildEventsResponse) Reset() {
	*x = BuildEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildEventsResponse) ProtoMessage() {}

func (x *BuildEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildEventsResponse.ProtoReflect.Descriptor instead.
func (*BuildEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *BuildEventsResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildEventsResponse) GetCurrentState() BuildState {
	if x != nil {
		return x.CurrentState
	}
	return BuildState_UNKNOWN
}

func (x *BuildEventsResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

// ListBuildsRequest models a request to list builds. Each parameter is combined
// with an implicit logical AND.
// Example:
//
//	with_github_repo = "foo/bar"
//	AND
//	with_build_state = SUCCESS
//	AND
//	started_after = <1 week ago>
//	AND
//	completed_before = <24 hours ago>
type ListBuildsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithGithubRepo  string     `protobuf:"bytes,1,opt,name=with_github_repo,json=withGithubRepo,proto3" json:"with_github_repo,omitempty"`
	WithGithubRef   string     `protobuf:"bytes,2,opt,name=with_github_ref,json=withGithubRef,proto3" json:"with_github_ref,omitempty"`
	WithImageRepo   string     `protobuf:"bytes,3,opt,name=with_image_repo,json=withImageRepo,proto3" json:"with_image_repo,omitempty"`
	WithBuildState  BuildState `protobuf:"varint,4,opt,name=with_build_state,json=withBuildState,proto3,enum=furanrpc.BuildState" json:"with_build_state,omitempty"`
	CompletedAfter  *Timestamp `protobuf:"bytes,5,opt,name=completed_after,json=completedAfter,proto3" json:"completed_after,omitempty"`
	StartedAfter    *Timestamp `protobuf:"bytes,6,opt,name=started_after,json=startedAfter,proto3" json:"started_after,omitempty"`
	CompletedBefore *Timestamp `protobuf:"bytes,7,opt,name=completed_before,json=completedBefore,proto3" json:"completed_before,omitempty"`
	StartedBefore   *Timestamp `protobuf:"bytes,8,opt,name=started_before,json=startedBefore,proto3" json:"started_before,omitempty"`
	Limit           uint32     `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListBuildsRequest) Reset() {
	*x = ListBuildsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildsRequest) ProtoMessage() {}

func (x *ListBuildsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildsRequest.ProtoReflect.Descriptor instead.
func (*ListBuildsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *ListBuildsRequest) GetWithGithubRepo() string {
	if x != nil {
		return x.WithGithubRepo
	}
	return ""
}

func (x *ListBuildsRequest) GetWithGithubRef() string {
	if x != nil {
		return x.WithGithubRef
	}
	return ""
}

func (x *ListBuildsRequest) GetWithImageRepo() string {
	if x != nil {
		return x.WithImageRepo
	}
	return ""
}

func (x *ListBuildsRequest) GetWithBuildState() BuildState {
	if x != nil {
		return x.WithBuildState
	}
	return BuildState_UNKNOWN
}

func (x *ListBuildsRequest) GetCompletedAfter() *Timestamp {
	if x != nil {
		return x.CompletedAfter
	}
	return nil
}

func (x *ListBuildsRequest) GetStartedAfter() *Timestamp {
	if x != nil {
		return x.StartedAfter
	}
	return nil
}

func (x *ListBuildsRequest) GetCompletedBefore() *Timestamp {
	if x != nil {
		return x.CompletedBefore
	}
	return nil
}

func (x *ListBuildsRequest) GetStartedBefore() *Timestamp {
	if x != nil {
		return x.StartedBefore
	}
	return nil
}

func (x *ListBuildsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListBuildsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builds []*BuildStatusResponse `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
}

func (x *ListBuildsResponse) Reset() {
	*x = ListBuildsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildsResponse) ProtoMessage() {}

func (x *ListBuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildsResponse.ProtoReflect.Descriptor instead.
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *ListBuildsResponse) GetBuilds() []*BuildStatusResponse {
	if x != nil {
		return x.Builds
	}
	return nil
}

var file_api_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1000,
		Name:          "furanrpc.read_only",
		Tag:           "varint,1000,opt,name=read_only",
		Filename:      "api.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional bool read_only = 1000;
	E_ReadOnly = &file_api_proto_extTypes[0]
)

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x75, 0x72,
	0x61, 0x6e, 0x72, 0x70, 0x63, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e,
	0x61, 0x6e, 0x6f, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70,
	0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xef, 0x03, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x61, 0x67, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x74, 0x61, 0x67, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68,
	0x61, 0x12, 0x37, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66,
	0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x16, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70,
	0x6f, 0x22, 0x52, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x70, 0x75, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x69, 0x66,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x6b, 0x69, 0x70, 0x49, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x12, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x12,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x14, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x22, 0xfb, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66,
	0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x7c, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x72,
	0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x87,
	0x01, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xd7, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x66,
	0x12, 0x26, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x3e, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x3e, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x75, 0x72,
	0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x4b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x2a,
	0x82, 0x01, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4f, 0x54, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x07, 0x32, 0xec, 0x03, 0x0a, 0x0d, 0x46, 0x75, 0x72, 0x61, 0x6e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66,
	0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0xc0, 0x3e,
	0x00, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0xc0, 0x3e, 0x01, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0xc0, 0x3e, 0x01, 0x12, 0x49, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x72, 0x61,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x03, 0xc0,
	0x3e, 0x01, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0xc0, 0x3e, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03,
	0xc0, 0x3e, 0x01, 0x3a, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x50, 0x6c, 0x75, 0x74, 0x6f, 0x2d, 0x74, 0x76, 0x2f, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x2f, 0x76,
	0x32, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x66, 0x75, 0x72, 0x61,
	0x6e, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x75, 0x72, 0x61, 0x6e, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_proto_goTypes = []interface{}{
	(BuildState)(0),                    // 0: furanrpc.BuildState
	(BuildCacheOpts_CacheType)(0),      // 1: furanrpc.BuildCacheOpts.CacheType
	(*Timestamp)(nil),                  // 2: furanrpc.Timestamp
	(*BuildCacheOpts)(nil),             // 3: furanrpc.BuildCacheOpts
	(*BuildResources)(nil),             // 4: furanrpc.BuildResources
	(*BuildDefinition)(nil),            // 5: furanrpc.BuildDefinition
	(*PushRegistryDefinition)(nil),     // 6: furanrpc.PushRegistryDefinition
	(*PushDefinition)(nil),             // 7: furanrpc.PushDefinition
	(*BuildRequest)(nil),               // 8: furanrpc.BuildRequest
	(*BuildStatusRequest)(nil),         // 9: furanrpc.BuildStatusRequest
	(*BuildCancelRequest)(nil),         // 10: furanrpc.BuildCancelRequest
	(*BuildRequestResponse)(nil),       // 11: furanrpc.BuildRequestResponse
	(*BuildCancelResponse)(nil),        // 12: furanrpc.BuildCancelResponse
	(*BuildStatusResponse)(nil),        // 13: furanrpc.BuildStatusResponse
	(*BuildEvent)(nil),                 // 14: furanrpc.BuildEvent
	(*BuildEventsResponse)(nil),        // 15: furanrpc.BuildEventsResponse
	(*ListBuildsRequest)(nil),          // 16: furanrpc.ListBuildsRequest
	(*ListBuildsResponse)(nil),         // 17: furanrpc.ListBuildsResponse
	nil,                                // 18: furanrpc.BuildDefinition.ArgsEntry
	(*descriptorpb.MethodOptions)(nil), // 19: google.protobuf.MethodOptions
}
var file_api_proto_depIdxs = []int32{
	1,  // 0: furanrpc.BuildCacheOpts.type:type_name -> furanrpc.BuildCacheOpts.CacheType
	18, // 1: furanrpc.BuildDefinition.args:type_name -> furanrpc.BuildDefinition.ArgsEntry
	3,  // 2: furanrpc.BuildDefinition.cache_options:type_name -> furanrpc.BuildCacheOpts
	4,  // 3: furanrpc.BuildDefinition.resources:type_name -> furanrpc.BuildResources
	6,  // 4: furanrpc.PushDefinition.registries:type_name -> furanrpc.PushRegistryDefinition
	5,  // 5: furanrpc.BuildRequest.build:type_name -> furanrpc.BuildDefinition
	7,  // 6: furanrpc.BuildRequest.push:type_name -> furanrpc.PushDefinition
	8,  // 7: furanrpc.BuildStatusResponse.build_request:type_name -> furanrpc.BuildRequest
	0,  // 8: furanrpc.BuildStatusResponse.state:type_name -> furanrpc.BuildState
	2,  // 9: furanrpc.BuildStatusResponse.started:type_name -> furanrpc.Timestamp
	2,  // 10: furanrpc.BuildStatusResponse.completed:type_name -> furanrpc.Timestamp
	0,  // 11: furanrpc.BuildEvent.current_state:type_name -> furanrpc.BuildState
	0,  // 12: furanrpc.BuildEventsResponse.current_state:type_name -> furanrpc.BuildState
	0,  // 13: furanrpc.ListBuildsRequest.with_build_state:type_name -> furanrpc.BuildState
	2,  // 14: furanrpc.ListBuildsRequest.completed_after:type_name -> furanrpc.Timestamp
	2,  // 15: furanrpc.ListBuildsRequest.started_after:type_name -> furanrpc.Timestamp
	2,  // 16: furanrpc.ListBuildsRequest.completed_before:type_name -> furanrpc.Timestamp
	2,  // 17: furanrpc.ListBuildsRequest.started_before:type_name -> furanrpc.Timestamp
	13, // 18: furanrpc.ListBuildsResponse.builds:type_name -> furanrpc.BuildStatusResponse
	19, // 19: furanrpc.read_only:extendee -> google.protobuf.MethodOptions
	8,  // 20: furanrpc.FuranExecutor.StartBuild:input_type -> furanrpc.BuildRequest
	9,  // 21: furanrpc.FuranExecutor.GetBuildStatus:input_type -> furanrpc.BuildStatusRequest
	9,  // 22: furanrpc.FuranExecutor.GetBuildEvents:input_type -> furanrpc.BuildStatusRequest
	9,  // 23: furanrpc.FuranExecutor.MonitorBuild:input_type -> furanrpc.BuildStatusRequest
	10, // 24: furanrpc.FuranExecutor.CancelBuild:input_type -> furanrpc.BuildCancelRequest
	16, // 25: furanrpc.FuranExecutor.ListBuilds:input_type -> furanrpc.ListBuildsRequest
	11, // 26: furanrpc.FuranExecutor.StartBuild:output_type -> furanrpc.BuildRequestResponse
	13, // 27: furanrpc.FuranExecutor.GetBuildStatus:output_type -> furanrpc.BuildStatusResponse
	15, // 28: furanrpc.FuranExecutor.GetBuildEvents:output_type -> furanrpc.BuildEventsResponse
	14, // 29: furanrpc.FuranExecutor.MonitorBuild:output_type -> furanrpc.BuildEvent
	12, // 30: furanrpc.FuranExecutor.CancelBuild:output_type -> furanrpc.BuildCancelResponse
	17, // 31: furanrpc.FuranExecutor.ListBuilds:output_type -> furanrpc.ListBuildsResponse
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	19, // [19:20] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCacheOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRegistryDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBuildsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
		ExtensionInfos:    file_api_proto_extTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
